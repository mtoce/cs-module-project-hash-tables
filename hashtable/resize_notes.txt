Hash table load factor
----------------------

Metric to indicate how overfull the hashtable is.

Lightly-loaded hash table:

0 |-> D
1 |-> H
2 |-> A
3 |-> C
4 |-> G
5 |-> B
6 |-> E
7 |-> F

More loaded:

0 |-> D -> M
1 |-> H
2 |-> A -> I
3 |-> C -> J -> L -> N
4 |-> G
5 |-> B -> O
6 |-> E -> K -> P
7 |-> F

Way overloaded:

0 |-> D -> M -> Q
1 |-> H -> R -> X -> Y
2 |-> A -> I -> 0
3 |-> C -> J -> L -> N -> Z
4 |-> G -> S -> U
5 |-> B -> O -> 1 -> 2
6 |-> E -> K -> P -> W
7 |-> F -> T -> V

How do we know when to resize the hash table?

load factor = number of elements stored in the hash table / number of slots

4 / 8 = 0.5
8 / 8 = 1.0
16 / 8 = 2.0

General rules of thumb

If the load factor is over 0.7, grow the table to keep performance up

If the load factor is under 0.2, shrink the table (down to some minimum) to
keep memory consumption down.

Grow the table: double the size

Shrink the table: halve the size (down to some minimum)

Each time you PUT:
    if the load factor > 0.7:
        create a new array with double the size of the old one
        for each element in the old array:
            PUT in the new array

